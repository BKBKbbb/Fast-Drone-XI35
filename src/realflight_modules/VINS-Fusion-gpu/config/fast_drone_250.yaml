%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1         
num_of_cam: 2


imu_topic: "/mavros/imu/data_raw"
image0_topic: "/camera/infra1/image_rect_raw"
image1_topic: "/camera/infra2/image_rect_raw"




output_path: "/home/orin02/vins_output"


cam0_calib: "left.yaml"
cam1_calib: "right.yaml"
image_width: 640
image_height: 480
   

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 1   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.


#body_T_cam0: !!opencv-matrix
#   rows: 4
#   cols: 4
#   dt: d
#   data: [ 0., 0.,
#       1.0, 8.6e-02,
#       -1.0, 0.,
#       0., 7.5e-03,
#       0., -1.0,
#       0., 2.8e-02, 0., 0., 0., 1. ]
#body_T_cam1: !!opencv-matrix
#   rows: 4
#   cols: 4
#   dt: d
#   data: [ 0., 0.,
#       1.0, 8.6e-02,
#       -1.0, 0.,
#       0., -4.25e-02,
#       0., -1.0,
#       0., 2.8e-02, 0., 0., 0., 1. ]

body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ -1.6502178783956989e-03, 3.8159729902645587e-02,
       9.9927028965876463e-01, 6.7782305102990950e-02,
       -9.9851533060681685e-01, -5.4469704418659060e-02,
       4.3109593323412105e-04, 3.9454274329887521e-03,
       5.4446407816435012e-02, -9.9778599224197440e-01,
       3.8192962199669389e-02, 5.7271088389329469e-02, 0., 0., 0., 1. ]
body_T_cam1: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ -1.7994482244809706e-03, 3.8125300859755892e-02,
       9.9927134624207070e-01, 6.7388874152142841e-02,
       -9.9850664723202087e-01, -5.4629602899542329e-02,
       2.8621758641993639e-04, -4.4419075927211317e-02,
       5.4600708965689082e-02, -9.9777856657747022e-01,
       3.8166669478128634e-02, 6.0067053959264829e-02, 0., 0., 0., 1. ]

#Multiple thread support
multiple_thread: 1
use_gpu: 1
use_gpu_acc_flow: 1

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 0           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.1          # accelerometer measurement noise standard deviation. #0.2   0.04
gyr_n: 0.01         # gyroscope measurement noise standard deviation.     #0.05  0.004
acc_w: 0.001         # accelerometer bias random work noise standard deviation.  #0.002
gyr_w: 0.0001       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.805         # gravity magnitude

#unsynchronization parameters
estimate_td: 1                      # online estimate time offset between camera and imu
#td: -0.003116                            # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)
td: -0.01                            # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "/home/orin02/savedfiles/output/pose_graph/" # save and load path
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0 

odometry_type: 0 #0为原始里程计，1为加了偏置后的里程计
drone_id: 1
single_offset: 2.0
