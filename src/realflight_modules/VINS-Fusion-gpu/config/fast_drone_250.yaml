%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1         
num_of_cam: 2


imu_topic: "/mavros/imu/data_raw"
image0_topic: "/camera/infra1/image_rect_raw"
image1_topic: "/camera/infra2/image_rect_raw"




output_path: "/home/nx01/vins_output"


cam0_calib: "left.yaml"
cam1_calib: "right.yaml"
image_width: 640
image_height: 480
   

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 1   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.


#body_T_cam0: !!opencv-matrix
#   rows: 4
#   cols: 4
#   dt: d
#   data: [ 0, 0, 1, 0.06,
#       -1, 0, 0, 0.017,
#       0, -1, 0, -0.09, 0., 0., 0., 1. ]
#body_T_cam1: !!opencv-matrix
#   rows: 4
#   cols: 4
#   dt: d
#   data: [ 0, 0, 1, 0.06,
#       -1, 0, 0, -0.03,
#       0, -1, 0, -0.09, 0., 0., 0., 1. ]

#body_T_cam0: !!opencv-matrix
#   rows: 4
#   cols: 4
#   dt: d
#   data: [ 1.3657317022469195e-02, -3.9914805131834333e-02,
#       9.9910974673608099e-01, 5.6432421263918918e-02,
#       -9.9961707606413208e-01, -2.4594219457809041e-02,
#       1.2681703760018084e-02, 1.4747462177701795e-02,
#       2.4066136639342192e-02, -9.9890036174813213e-01,
#       -4.0235411849609326e-02, -8.7620171030506760e-02, 0., 0., 0., 1. ]
#body_T_cam1: !!opencv-matrix
#   rows: 4
#  cols: 4
#   dt: d
#   data: [ 1.3464714296070435e-02, -4.0749763576254094e-02,
#       9.9907865468010304e-01, 5.8053777422157109e-02,
#       -9.9961352754334309e-01, -2.4851281375552148e-02,
#       1.2458305115349459e-02, -3.3381621674723479e-02,
#       2.4320711775751892e-02, -9.9886028581702690e-01,
#       -4.1068630318629840e-02, -8.6666506024647039e-02, 0., 0., 0., 1. ]
body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ 1.3588346146575336e-02, -3.9434391267117556e-02,
       9.9912976416198951e-01, 6.6492411012122360e-02,
       -9.9953852639731289e-01, -2.7684902302100634e-02,
       1.2501217221196327e-02, 2.1622714153746034e-02,
       2.7167832016729565e-02, -9.9883856301702489e-01,
       -3.9792385372024786e-02, -8.4604344342210688e-02, 0., 0., 0., 1. ]
body_T_cam1: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ 1.3355419510516109e-02, -4.0378805615298108e-02,
       9.9909518306654876e-01, 6.8021344255013494e-02,
       -9.9953837313647609e-01, -2.7808000273151556e-02,
       1.2237473125423459e-02, -2.7427963355921993e-02,
       2.7288704575064875e-02, -9.9879741047816639e-01,
       -4.0731553183305680e-02, -8.3186262000022701e-02, 0., 0., 0., 1. ]
#Multiple thread support
multiple_thread: 1
use_gpu: 1
use_gpu_acc_flow: 1

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 0           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.1          # accelerometer measurement noise standard deviation. #0.2   0.04
gyr_n: 0.01         # gyroscope measurement noise standard deviation.     #0.05  0.004
acc_w: 0.001         # accelerometer bias random work noise standard deviation.  #0.002
gyr_w: 0.0001       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.805         # gravity magnitude

#unsynchronization parameters
estimate_td: 1                      # online estimate time offset between camera and imu
td: -0.003116                            # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "/home/fast/savedfiles/output/pose_graph/" # save and load path
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0 

